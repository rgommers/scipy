name: macOS Tests

on:
  push:
    branches:
      - meson

  pull_request:
    branches:
      - meson

env:
  INSTALLDIR: "installdir"
  CCACHE_DIR: "${{ github.workspace }}/.ccache"

jobs:
  test_meson:
    name: Meson build
    # If using act to run CI locally the github object does not exist and the usual skipping should not be enforced
    if: "github.repository != '' || github.repository == 'rgommers/scipy' && !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[skip github]') && !contains(github.ref, 'maintenance/') && !contains(github.base_ref, 'maintenance/')"
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Ccache
      run: |
        brew install ccache

    - name:  Prepare compiler cache
      id:    prep-ccache
      shell: bash -l {0}
      run: |
        mkdir -p "${CCACHE_DIR}"
        echo "::set-output name=dir::$CCACHE_DIR"
        NOW=$(date -u +"%F-%T")
        echo "::set-output name=timestamp::${NOW}"

    - name: Setup compiler cache
      uses:  actions/cache@v2
      id:    cache-ccache
      # Reference: https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows#matching-a-cache-key
      # NOTE: The caching strategy is modeled in a way that it will always have a unique cache key for each workflow run
      # (even if the same workflow is run multiple times). The restore keys are not unique and for a partial match, they will
      # return the most recently created cache entry, according to the GitHub Action Docs.
      with:
        path: ${{ steps.prep-ccache.outputs.dir }}
        key:  ${{ github.workflow }}-${{ matrix.python-version }}-ccache-macos-${{ steps.prep-ccache.outputs.timestamp }}
        # This evaluates to `macOS Tests-3.9-ccache-macos-` which is not unique. As the CI matrix is expanded, this will
        # need to be updated to be unique so that the cache is not restored from a different job altogether.
        restore-keys: |
          ${{ github.workflow }}-${{ matrix.python-version }}-ccache-macos-

    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml') }}

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        channels: conda-forge
        channel-priority: true
        environment-file: environment.yml
        use-only-tar-bz2: true

    - name: Setup Conda Environment
      shell: bash -l {0}
      run: |
        mamba env create -f environment.yml
        ccache -s

    - name: Build and Install Scipy
      shell: bash -l {0}
      run: |
        conda activate scipy-dev
        python -m pip install meson==0.60.0rc1
        CC="ccache $CC" python dev.py -rb --installdir ${{ env.INSTALLDIR }} -j 2 --build-only

    - name: Test Scipy
      shell: bash -l {0}
      run: |
        conda activate scipy-dev
        export PYTHONPATH="$PWD/installdir/lib/python3.9/site-packages/"
        python dev.py -n -j 2

    - name: Ccache statistics
      shell: bash -l {0}
      run: |
        ccache -s
