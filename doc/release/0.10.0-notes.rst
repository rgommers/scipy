==========================
SciPy 0.10.0 Release Notes
==========================

.. note:: Scipy 0.10.0 is not released yet!

.. contents::

SciPy 0.10.0 is the culmination of XXX months of hard work. It contains
many new features, numerous bug-fixes, improved test coverage and
better documentation.  There have been a number of deprecations and
API changes in this release, which are documented below.  All users
are encouraged to upgrade to this release, as there are a large number
of bug-fixes and optimizations.  Moreover, our development attention
will now shift to bug-fix releases on the 0.10.x branch, and on adding
new features on the development trunk.

This release requires Python 2.4 - 2.7 or 3.1 - and NumPy 1.5 or greater.

Please note that SciPy is still considered to have "Beta" status, as
we work toward a SciPy 1.0.0 release.  The 1.0.0 release will mark a
major milestone in the development of SciPy, after which changing the
package structure or API will be much more difficult.  Whilst these
pre-1.0 releases are considered to have "Beta" status, we are
committed to making them as bug-free as possible.  For example, in
addition to fixing numerous bugs in this release, we have also doubled
the number of unit tests since the last release.

However, until the 1.0 release, we are aggressively reviewing and
refining the functionality, organization, and interface. This is being
done in an effort to make the package as coherent, intuitive, and
useful as possible.  To achieve this, we need help from the community
of users.  Specifically, we need feedback regarding all aspects of the
project - everything - from which algorithms we implement, to details
about our function's call signatures.


New features
============

Discrete-Time Linear Systems (``scipy.signal``)
-----------------------------------------------

Support for simulating discrete-time linear systems, including 
``scipy.signal.dlsim``, ``scipy.signal.dimpulse``, and ``scipy.signal.dstep``,
has been added to SciPy.  Conversion of linear systems from continuous-time to
discrete-time representations is also present via the 
``scipy.signal.cont2discrete`` function.


Deprecated features
===================



Removed features
================

The deprecated name `invnorm` was removed from ``scipy.stats.distributions``,
this distribution is available as `invgauss`.


Other changes
=============

